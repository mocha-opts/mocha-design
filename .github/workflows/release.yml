name: Release

on:
  push:
    paths:
      - ".changeset/**"
      - "packages/**"
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup pnpm 7
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
      - name: Setup Git User
        shell: bash
        run: |
          git config --global user.email "1424392205@qq.com"
          git config --global user.name "coconut"

      - name: Install Dependencies
        run: pnpm i

      - name: Build
        run: pnpm build

      - name: Generate docs
        run: pnpm build:docs

      - name: Deploy docs
        run: pnpm deploy:docs

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          commit: "ci(changesets): version packages"
          setupGitUser: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create @dev release
        if: steps.changesets.outputs.published != 'true'
        run: |
          git checkout main
          pnpm version:dev
          pnpm release:dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Update changelog
      #   if: steps.changesets.outputs.published == 'true'
      #   run: |
      #     pnpm changelog:latest
      #     pnpm changelog:format
      #     pnpm changelog:commit

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
